---
- name: Konfiguracja serwera ansible
  
  vars_files: 
    - vars/reposerver_vars.yml
  
  hosts: '{{ server_name }}_group'
  become: true
  ignore_errors: true

  tasks:   

    # GRUPY
    - name: Grupa - tworzenie 
      group: 
        name: '{{ server_name }}group'
        state: '{{ do_undo }}'

    # UZYTKOWNIK 
    - name: User - tworzenie
      user: 
        name: '{{ user_to_add }}'
        create_home: true
        home: '/home/example_home/{{ user_to_add }}'
        groups: 
          '{{ user_groups }}'
        append: yes
        state: '{{ do_undo }}'
    
    # INSTALACJA
    - name: '{{service_dnf_name}} - instalacja'
      package: 
        name: '{{service_dnf_name}}'
        state: '{{ do_undo }}'

    # REPOs - wylaczenie domyslnych 
    - name: Wylaczenie repo 
      shell: sed -i "s/enabled=1/enabled=0/g" /etc/yum.repos.d/*
         
    # KOPIOWANIE 
    - name: Kopia pliku exports dla nfs + plikow .repo
      copy: src={{ item.src }} dest={{ item.dest }}
      with_items:
        - { src: '/repos/exports', dest: '/etc/exports' }
        - { src: '/repos/BaseOS/baseos.repo', dest: '/etc/yum.repos.d/baseos.repo' }
        - { src: '/repos/AppStream/appstream.repo', dest: '/etc/yum.repos.d/appstream.repo' }
    
    # SERVICE - start 
    - name: '{{service_name}} i firewalld - wlaczenie uslugi'
      service: 
        name: "{{ item }}"
        state: started
        enabled: yes
      loop: 
        - '{{service_name}}'
        - firewalld

    # FIREWALLD - odblokowanie uslugi
    - name: 'Firewalld - odblokowanie {{ service_firewall_name }}'
      ansible.posix.firewalld:
        state: enabled
        permanent: yes
        immediate: yes
        service: '{{ service_firewall_name }}'

    # SHELL - eksport udzialow  
    - name: Eksport udzialow z repo
      shell: /usr/sbin/exportfs -a

