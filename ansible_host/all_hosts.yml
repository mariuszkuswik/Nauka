---
- name: Konfiguracja ogolna dla wszystkich hostow
  ignore_errors: true
  become: true
  vars: 
    do_undo: present
    share_name: share
    # ansible_python_interpreter: /usr/bin/python3

  hosts: 'all'

  tasks: 

    ### SSH
    - name: SSH - wylaczenie autentykacji przy pomocy hasla
      shell: sed -i "s/PasswordAuthentication yes/PasswordAuthentication no/g" /etc/ssh/sshd_config && systemctl restart sshd

    ### FSTAB
    - name: FSTAB - dopisanie opcji auto
      shell: sed "s/defaults,/defaults,auto,/g" /etc/fstab

    ### GRUPY ###
    - name: Grupa - tworzenie 
      group: 
        name: 'test_group'
        state: '{{ do_undo }}'

    ### UZYTKOWNICY ### 
    - name: User - tworzenie wymienionych 
      user: 
        name: '{{ item.name }}'
        create_home: true
        home: '/home/example_home/{{ item.name }}'
        groups: 
          '{{ item.groups }}'
        append: yes
        state: '{{ do_undo }}'
      loop:
          - { name: 'user_user', groups: 'wheel, test_group' }
          - { name: 'test_user', groups: 'test_group' }

    # REPO- wylaczenie domyslnych 
    - name: REPO - Wylaczenie domyslnych repozytoriow AppStream i BaseOS
      shell: sed -i "s/enabled=1/enabled=0/g" /etc/yum.repos.d/*AppStream* && sed -i "s/enabled=1/enabled=0/g" /etc/yum.repos.d/*BaseOS*

    ### REPO lokalne - kopia 
    - name: REPO - Kopia plikow .repo do /etc/yum.repos.d
      copy: 
        src: /repos/{{ item }}/{{ item }}.repo
        dest: /etc/yum.repos.d/{{ item }}.repo
      loop: 
        - BaseOS
        - AppStream

    ### UPDATE ###
    - name: Update
      dnf: 
        name: "*"
        state: "latest"
        nobest: yes
        skip_broken: yes

    ### INSTALACJA ###
    - name: SERVICE - nfs i firewalld - instalacja 
      package: 
        name:
          - nfs-utils
          - firewalld
        state: '{{ do_undo }}'       
    
    ### SERVICE ###
    - name: SERVICE - nfs-client i firewalld - wlaczenie 
      service:
        name: '{{ item }}'
        state: started
        enabled: yes
      loop: 
        - nfs-client.target
        - firewalld

    #### SHARE ###
    - name: SHARE - tworzenie folderu do mapowania
      file:
        owner: vagrant
        group: vagrant
        path: /mnt/{{ share_name }}
        state: directory

    - name: SHARE - mapowanie udzialu nfs 
      mount: 
        path: /mnt/{{ share_name }}
        src: 192.168.1.50:/{{ share_name }}
        state: mounted
        fstype: nfs4
        opts: _netdev,rw,nofail
    

